version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql-container
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: users_api
      MYSQL_PASSWORD: root
    volumes:
      - mysql-data:/var/lib/mysql  # Persistencia de datos
    networks:
      - app-network

  memcached:
    image: memcached:latest
    container_name: memcached-container
    ports:
      - "11211:11211"
    networks:
      - app-network

  mongo:
    image: mongo:4
    container_name: mongo-container
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbit-container
    ports:
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
    networks:
      - app-network

  solr:
    image: solr:latest
    container_name: solr-container
    ports:
      - "8983:8983"
    volumes:
      - ./search-api/solr-config:/opt/solr/server/solr/hotels
    command: solr-create -c hotels
    networks:
      - app-network

  users-api:
    image: users-api:latest
    container_name: users-api-container
    build:
      context: ./users-api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: /bin/sh -c "sleep 20 && until nc -z mysql 3306; do sleep 1; done && go run main.go"
    depends_on:
      - mysql
      - memcached
    networks:
      - app-network
    restart: on-failure

  hotels-api:
    image: hotels-api:latest
    container_name: hotels-api-container
    build:
      context: ./hotels-api
    ports:
      - "8081:8081"
    command: /bin/sh -c "sleep 10 && until nc -z rabbit-container 5672; do sleep 1; done && go run main.go"
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - app-network
    restart: on-failure

  search-api:
    image: search-api:latest
    container_name: search-api-container
    build:
      context: ./search-api
    ports:
      - "8082:8082"
    command: /bin/sh -c "sleep 10 && until nc -z rabbit-container 5672; do sleep 1; done && go run main.go"
    depends_on:
      - rabbitmq
      - solr
    networks:
      - app-network
    restart: on-failure

  frontend_hoteles:
    image: frontend_hoteles:latest
    container_name: frontend_hoteles
    build:
      context: ./frontend_hoteles
    ports:
      - "3000:80"
    command: /bin/sh -c "npm install && npm start"
    depends_on:
      - users-api
    networks:
      - app-network
    restart: on-failure

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
